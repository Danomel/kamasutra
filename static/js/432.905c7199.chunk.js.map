{"version":3,"file":"static/js/432.905c7199.chunk.js","mappings":"+IACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,sBCEjN,MASA,EAToBA,IAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAQ,KAAAD,OAAIC,GAAWC,UACxCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKM,SAAEP,EAAMU,QACtB,ECFV,EAJiBV,IACRG,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAUC,SAAEP,EAAMW,U,mBCE3C,MAwCA,EAxCiBX,IACf,IAAIY,EAAQZ,EAAMa,YACdC,EAAkBF,EAAMG,QAAQC,KAAKC,IACvCd,EAAAA,EAAAA,KAACe,EAAU,CAACR,KAAMO,EAAEP,KAAMR,GAAIe,EAAEf,IAASe,EAAEf,MAEzCiB,EAAkBP,EAAMQ,SAASJ,KAAKK,IACxClB,EAAAA,EAAAA,KAACmB,EAAO,CAACX,QAASU,EAAEV,SAAcU,EAAEnB,MAElCqB,EAAiBX,EAAMW,eAU3B,OAAKvB,EAAMwB,QAGTC,EAAAA,EAAAA,MAAA,OAAKrB,UAAWE,EAAUC,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAeC,SAAEO,KACjCW,EAAAA,EAAAA,MAAA,OAAKrB,UAAWE,EAAWC,SAAA,EACzBJ,EAAAA,EAAAA,KAAA,OAAAI,SAAMY,KACNhB,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,YACEuB,MAAOH,EACPI,SAfgBC,IACxB,IAAIC,EAAOD,EAAEE,OAAOJ,MACpB1B,EAAM+B,mBAAmBF,EAAK,EActBG,YAAY,0BAGhB7B,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,UAAQ8B,QAxBSC,KACvBlC,EAAMkC,oBAAoB,EAuBgB3B,SAAC,kBAfnBJ,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAAC1B,GAAI,UAkBhC,E,oBCfV,SAAe2B,E,OAAAA,KACbC,EAAAA,EAAAA,KAPqBzB,IACd,CACLC,YAAaD,EAAMC,gBAbGyB,IACjB,CACLP,mBAAqBF,IACnBS,GAASC,EAAAA,EAAAA,IAA4BV,GAAM,EAE7CK,mBAAoBA,KAClBI,GAASE,EAAAA,EAAAA,MAAqB,MAalCC,EAAAA,EAFF,CAGEC,E","sources":["webpack://project01/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__bl5VW\",\"dialogsItems\":\"Dialogs_dialogsItems__sK0eO\",\"active\":\"Dialogs_active__sEnAo\",\"dialog\":\"Dialogs_dialog__8aysa\",\"messages\":\"Dialogs_messages__0TeCv\",\"message\":\"Dialogs_message__sCeaQ\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n  let messageElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n  let onSendMessageClick = () => {\r\n    props.onSendMessageClick();\r\n  };\r\n\r\n  let onNewMessageChange = (e) => {\r\n    let body = e.target.value;\r\n    props.onNewMessageChange(body);\r\n  };\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messageElements}</div>\r\n        <div>\r\n          <textarea\r\n            value={newMessageBody}\r\n            onChange={onNewMessageChange}\r\n            placeholder=\"Enter your message\"\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n          <button onClick={onSendMessageClick}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import {\r\n  sendMessageCreater,\r\n  updateNewMessageBodyCreater,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onNewMessageChange: (body) => {\r\n      dispatch(updateNewMessageBodyCreater(body));\r\n    },\r\n    onSendMessageClick: () => {\r\n      dispatch(sendMessageCreater());\r\n    },\r\n  };\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","_jsx","className","concat","s","children","NavLink","to","name","message","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messageElements","messages","m","Message","newMessageBody","isAuth","_jsxs","value","onChange","e","body","target","onNewMessageChange","placeholder","onClick","onSendMessageClick","Navigate","compose","connect","dispatch","updateNewMessageBodyCreater","sendMessageCreater","withAuthRedirect","Dialogs"],"sourceRoot":""}